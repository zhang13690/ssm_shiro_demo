<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!-- SpringMVC的配置 -->
    <!-- 1. 扫描controller类的注解 -->
    <context:component-scan base-package="com.zhang.controller" />
    <!-- 2. SpringMVC驱动配置 -->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <!--配置fastjson支持-->
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=utf-8</value>
                        <value>application/json</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!-- 步骤1：让Spring自动创建代理 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
        <!-- 该值为true表示强制使用CGLIB创建代理类 -->
        <property name="proxyTargetClass" value="true" />
    </bean>
    <!--
    其实上述的配置相当于以下的配置：
    <aop:config proxy-target-class="true" />
    就是直接强制使用CGLIB代理，之前讲过
    -->
    <!-- 步骤2：开启Shiro Spring AOP权限注解的支持 -->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <!-- 引用安全管理器 -->
        <property name="securityManager" ref="securityManager"/>
    </bean>
    <!-- 处理异常 -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <!-- 登录（认证不成功会抛出此异常） -->
                <prop key="org.apache.shiro.authz.UnauthenticatedException">
                    redirect:/login.jsp
                </prop>
                <!-- 授权 -->
                <prop key="org.apache.shiro.authz.UnauthorizedException">
                    redirect:/unauthorize.jsp
                </prop>
            </props>
        </property>
    </bean>
</beans>